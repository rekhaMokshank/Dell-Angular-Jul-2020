TypeScript = JavaScript + TypeSafety

int x = 10;

x = "abc";

var x = 10;

x = 'abc';

x = true;

x = {};

x = function() {}

x = undefined;


function add(x,y){
    if (typeof x !== 'number' || typeof y !== 'number')
        throw new Error('Invalid arguments');
    return x + y;
}

function add(){
    function parseArg(n){
        if (typeof n === 'function') return parseArg(n());
        if (Array.isArray(n)) return add.apply(this, n);
        return isNaN(n) ? 0 : parseInt(n, 10);
    }
    return arguments.length <= 1 ? parseArg(arguments[0]) : parseArg(arguments[0]) + add(Array.prototype.slice.call(arguments, 1));
}

add(10,20)
add(10, '20')
add(10, 'abc')
add([10,20],[30,40])
add([10,20],[30,'40'])
add([10,20],[30,'abc'])
add([10,20],[30,[40,'abc']])
add(function(){ return 10;}, function(){ return 20;});
add(function(){ return [10,20];}, function(){ return [30,[40,'abc']];});
add([function(){ return [10,20];}, function(){ return [30,[40,'abc']];}]);
add(function(){ return [function(){ return [10,20];}, function(){ return [30,[40,'abc']];}]; });
add(10)
add()
add(10,20,30,40,50)



var x : number = 100;

function add(x : number,y : number) : number {
    return x + y;
}

add(10,'20')

class Emp{

}
    |
    |
    V
    tsc
    |
    |
    V

var x  = 100;

function add(x ,y )  {
    return x + y;
}

function Emp(){

}



access modifier (private, public, protected)
classes
arrow functions
intefaces
enums
generics

decorators

typescript = superset of javascript


http://typescriptlang.org


Angualar
=========
Component
    Encapsulates Presentation (HTML & CSS) + UI Behavior + UI State
    Application = composition of components

Directive
    Dom Manipulations

Pipe
    Data transformation for presentation

Service
    Non UI concerns 

Module
    Registry of entities (components, directives, pipes, services) in the application
    Dependency Injection
    Application starting point is a Module
    There has to be a minimum of 1 module in the app


Framework X Library

@angular/cli

In Window
npm install @angular/cli  -g

In Mac
sudo npm install @angular/cli  -g

ES6 Modules
    Everything defined in a file (js/ts) is by default private
    Explicitly export any public entities
    Explicitly import what is required from the other module
    


